import React, { useEffect, useState } from 'react';
import {
  View, Text, StyleSheet, ActivityIndicator, Button, Alert, ScrollView, RefreshControl
} from 'react-native';
import { Picker } from '@react-native-picker/picker';
import AsyncStorage from '@react-native-async-storage/async-storage';
import axios from 'axios';

const CallReportsDropdownScreen = ({ navigation }) => {
  const [caseList, setCaseList] = useState([]);
  const [selectedCaseId, setSelectedCaseId] = useState(null);
  const [selectedReport, setSelectedReport] = useState(null);
  const [loading, setLoading] = useState(true);
  const [refreshing, setRefreshing] = useState(false);


  useEffect(() => {
    fetchCallReports();
  }, []);

  const fetchCallReports = async () => {
    try {
      const userId = await AsyncStorage.getItem('user_id');
      const res = await axios.get(`http://134.199.178.17/gayatri/api/call_reports?engineer_id=${userId}`);
      setCaseList(res.data);
      setLoading(false);
    } catch (error) {
      Alert.alert('Error', 'Failed to fetch call reports');
      setLoading(false);
    }
  };

  const handleCaseSelection = (caseId) => {
    setSelectedCaseId(caseId);
    const found = caseList.find(item => item.case_id === caseId);
    setSelectedReport(found || null);
  };

  const handleSubmit = () => {
    if (!selectedReport) return;
    navigation.navigate('SubmitCallReportScreen', { report: selectedReport });
  };

  const onRefresh = () => {
    setRefreshing(true);
    fetchCallReports();
  };

  if (loading) {
    return <ActivityIndicator size="large" style={styles.loader} />;
  }

  return (
    <ScrollView style={styles.container}>
      <Text style={styles.label}>Select a Case ID</Text>
      <View style={styles.pickerContainer}>
        <Picker
          selectedValue={selectedCaseId}
          onValueChange={(itemValue) => handleCaseSelection(itemValue)}
          style={styles.picker}
        >
          <Picker.Item label="Choose case ID" value={null} />
          {caseList.map((item) => (
            <Picker.Item key={item.id} label={item.case_id} value={item.case_id} />
          ))}
        </Picker>
      </View>

      {selectedReport && (
        <View style={styles.detailsBox}>
          <Text style={styles.detailText}>Serial No: {selectedReport.serial_number}</Text>
          <Text style={styles.detailText}>Customer Name: {selectedReport.customer_name}</Text>
          <Text style={styles.detailText}>Mobile: {selectedReport.mobile_number}</Text>
          <Text style={styles.detailText}>Address: {selectedReport.address}</Text>

          <Button title="Submit Report" onPress={handleSubmit} />
        </View>
      )}
    </ScrollView>
  );
};

export default CallReportsDropdownScreen;

const styles = StyleSheet.create({
  container: {
    padding: 16,
    backgroundColor: '#f5f6fa',
  },
  loader: {
    marginTop: 50,
  },
  label: {
    fontSize: 18,
    fontWeight: '600',
    marginBottom: 8,
  },
  pickerContainer: {
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 8,
    marginBottom: 20,
    backgroundColor: '#fff',
  },
  picker: {
    height: 50,
    width: '100%',
  },
  detailsBox: {
    padding: 16,
    borderWidth: 1,
    borderColor: '#dcdde1',
    borderRadius: 10,
    backgroundColor: '#fff',
    marginBottom: 20,
  },
  detailText: {
    fontSize: 16,
    marginBottom: 6,
  },
});
